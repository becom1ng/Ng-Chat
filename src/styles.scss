// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$orange-palette,
    ),
    density: (
      scale: -2,
    ),
  )
);

$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$orange-palette,
    ),
    density: (
      scale: -2,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// :root {
//   @include mat.all-component-themes($dark-theme);
// }

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($Ng-Chat-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($Ng-Chat-theme);
/* You can add global styles to this file, and also import other style files */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  // Apply the dark theme by default
  // @include mat.core-theme($dark-theme);
  // @include mat.button-theme($dark-theme);
  @include mat.all-component-themes($dark-theme);

  // Apply the light theme only when the user prefers light themes.
  @media (prefers-color-scheme: light) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-color($light-theme);
    @include mat.button-color($light-theme);
  }
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.gradient-bg {
  background: linear-gradient(
    138deg,
    var(--primary-darker-color) 0%,
    var(--primary-color) 100%
  );
}

.spacer {
  flex: 1 1 auto;
}

@keyframes animateInPrimary {
  0% {
    transform: translate3d(-100%, 0, 0);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes animateInSecondary {
  0% {
    opacity: 0;
  }

  50% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.animate-in-primary {
  animation: animateInPrimary;
  animation: animateInPrimary;
  animation-duration: 750ms;
}

.animate-in-secondary {
  animation: animateInSecondary ease-in 1;
  animation: animateInSecondary ease-in 1;
  animation-duration: 750ms;
}
